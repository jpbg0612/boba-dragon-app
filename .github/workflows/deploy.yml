# .github/workflows/deploy.yml

name: CD (Continuous Deployment)

# ACTUALIZADO: Ahora se activa en 'main' Y en 'develop'.
on:
  push:
    branches: [ main, develop ]

jobs:
  # El trabajo de prueba se queda igual.
  test:
    runs-on: ubuntu-latest
    env:
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm install
      - run: npm test

  # El trabajo de despliegue ahora es más inteligente.
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cd functions && npm install

      # ¡LA MAGIA! Este paso configura la llave de Stripe correcta.
      - name: Configure Stripe Key
        # Si estamos en la rama 'main', usa la llave LIVE. Si no, usa la de PRUEBA.
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "Using LIVE Stripe key"
            npx firebase-tools functions:config:set stripe.secret="${{ secrets.STRIPE_SECRET_KEY_LIVE }}" --token "${{ secrets.FIREBASE_TOKEN }}"
          else
            echo "Using TEST Stripe key"
            npx firebase-tools functions:config:set stripe.secret="${{ secrets.STRIPE_SECRET_KEY }}" --token "${{ secrets.FIREBASE_TOKEN }}"
          fi
      
      # El paso de despliegue es el mismo, pero ahora se ejecutará con la llave correcta.
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          action: deploy
          project_id: 'bobadragonapp'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
